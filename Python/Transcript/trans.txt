ever wish you could automaticallygenerate lecture notes from your lecturevideosor maybe you're tired of writing meetingminutes i know i amwell in this video we're going to solvethat completely what's happening guys myname is nicholas ronatt and in thisvideo we're going to be taking a look atvideo to textinterested let's take a look in greaterdetail as to what we're going to begoing throughso in this video we're going to beconverting video to textso we're first out going to start out byusing the youtube dl library to downloadvirtually any youtube videowe're then going to pre-process thatvideo to audio using theffmpeg library so this is really easyand it allows you torip out the audio out of any video we'rethen going to convert that video to textusing the watson speaker tech servicefor free and then we're going to beoutputting those resultsfrom that conversion into a text file soyou'll then have a full-blown transcriptthat you can thengo away and use without having to worryabout it so in terms of how we're goingto be doing this we're going to bemainly working inside of a jupiternotebook so we'll first start out byextracting our audio from our video thatwe've already downloadedusing the youtube dl functionality we'llthen convert it using the watson speechto tech serviceand last but not least we're going topush that out using the native pythonfunctionality to create a text fileready to do it let's get to it so inthis video we're going to be focused onconverting a videoall the way through to text now we'remainly going to be working in python soi've already got a jupyter notebookup here now our core steps that we'regoing to be going through are installingand importing dependenciesextracting our audio using ffmpegthen creating our speech to text serviceconverting it to textand outputting it to a txt filenow in this case we're going to add inone additional step which i haven'tincluded here and that's grabbing avideoso say for example we had a youtubevideo that we wanted to grab well we canactually grab thatusing the youtube dl library this isprobably one of my favorite librariesit allows you to grab youtube videos andconvert your own videos or convert othervideosif you want to grab some notes so inorder to install youtube dlwe just need to open up a new terminaland then type in pip installyoutube dl so this is going to gothroughinstall everything that you need youobviously need python in order to usepip install command but that shouldinstall it for you then all you need todo is type in youtubedl and then grab a link of the videothat you want so in this case i've gotmyai versus machine learning versus deeplearning versus data science videoand we can grab that link paste it afterthe youtube dl command and hitenter this is going to go through andstart downloading our video now it'sgoing to download it in your homedirectory but then we can grab itand put it inside of the same directorythat we've got our jupyter notebook solet's let that download and then we canget startedokay so our video is now downloaded wecan hit openand this is going to open it up in thesame directory so you can see here we'vegot ai versus machine learning versusdeep learning dot make vso we can copy that over into our videoto textfolder now i'm just going to rename itto make our lives a little bit easierwhen we actually start working with thisfile so we'll just call it aimldot make v alright cool so that isour video file done now we can get intothe good bitso the first thing that we're going todo is first up install our dependenciesnow we've got two key dependencies herewe need to have the ibm watson servicesand we also need to installffmpeg so ffmpeg is basically a librarythat helps you work witha whole bunch of video files and audiofiles and we're going to use it toextract the audio from our video inorder to send itto the watson speech to text serviceso we can install those dependencieswithin our jupyter notebook so let's goahead and do thatokay so i've gone ahead and installedthose dependencies now in order to dothat we've used the pipinstall ibm watson command and i'vecommented it out but if you wanted toinstallffmpeg you just need to type in brewinstallffmpeg if you're on a mac if you're on awindows machinethere's some additional steps on thislink but again i'll includethe link to this in order to install itas well as a full github repo for thistutorialin the description below so now thatthat's installed what we can then go anddois import our dependencies so in thiscase we're going to be using the ibmwatson dependencies plus we're going tobe using sub process to actually performour audio extractionso let's bring in our dependencies firstupso those are our dependencies importedso we've gone ahead andimported a couple of things there sofirst up we imported subprocess and thisis going to allow us to makea sub process call using our regularterminalthen we've imported the speech to textclass from ibm watsonand this is going to be used to actuallyconnect to our speech to text servicewe've also imported a couple of helpershere so recognize callbackas well as audio source again from ibmwatson andlast but not least we've imported iamauthenticator so this is going to allowus to authenticate against ourspeech-to-text serviceonce we set that up now the next thingthat we're going to do is actuallyextract our audioso remember when we extracted our videowe had this aiml video herenow what we want to do first is takethat video and extract the audio from itso we can then convert speech to text solet's go ahead and do that and in orderto do that we're going to be usingffmpegalrighty so we've now gone and extractedour audio now in terms of what we'veactually done here we've passed througha commandand that command is basically callingour ffmpeglibrary we're passing through the nameof the file that we want to extract ouraudio fromthe bitrate as well as the frequency andthen last but not least we've specifiedwhat we want the file name to beso if you haven't downloaded a youtubevideo or you want to use your own videoall you need to do is specify adifferent file name hereand this just needs to be the file thatyou're trying to convertthen what we've done is we've gone andcalled that command using our subprocesslibrary and we've used our shell so nowif we take a look within our folderwe've gota file called audio.wav so thisis our audio file so if we actually playthat ever wondered about the differencesbetweenai so you can see that we've nowextracted the audio from our videonow the next step is to start setting upour watson speech to text serviceso in this case we're going to be usinga free watson service so you'll be ableto convert up to i think it's 500minutes offree speech to text per month so let'sgoahead and start setting that up now inthis case the first thing that we needto do is grab two variables so we'regoing to need anapi key as well as a urlnow in order to get an api key and a urlyou just need to go tocloud.ibm.com forward slash catalog thenhit services soover here and then scroll on down to aiand machine learning and this is whereyou'll see all the ai and machinelearning servicesand then from there you'll be able tosee speech to textso if you select speech to textyou can see that there'll be a wholeheap of pricing plans that show up butwe just need this light plan here andas i said you get 500 free minutes permonth to convertso that's more than enough if you'rejust getting started so choose that planandthen go ahead and hit create and as soonas this service is created you'll beable to extractyour api key as well as your url andplug it backinto your notebook so now that that'screated we can just go to manageover here so you'll start out on gettingstarted you just need to hit manageand then grab your api key down thereso we can just hit these copy buttonsdown here copy copy copyand we'll grab our api key first upand then we'll store that in ourvariable here and then likewise we'll goand grab our urlawesome now that's done now what we needto do isactually start setting up our speech totext service so let's go ahead and dothatso that is our service set up so inthose three lines what we first did iswe created a new iamauthenticator and to that we pass ourapi key which is this variable up hereand that's the same one that we got fromour ibm cloud servicewe then went and created a new speech totech service and passed through ourauthenticator which is this variablehereand then we also set our service url sothis is basically tellingour speech to text service or ourspeaker text variable inside of ourjupyter notebookwhere is our service inside of the worldwide web so that's basically all set upnow what we can actually go and dois start converting our audioso let's delete that cell there andcreate a couple of newcells below that and then what we can dois create our conversionso in order to do this we're going to beusing the speech to textdot recognize method and we're basicallygoing to bepassing through our audio.wav file andconverting that to textwe'll then be able to pre-process theresults and output it to a txt fileso let's go ahead and start performingthat conversionso that's basically our conversion codedonenow before we actually go and run thatlet's take a quick look at what we'veactually writtenso first up what we're doing is we'reopening up our audio.wav fileand then we're using the speech to textservice that we set up here so ourspeech of text variables coming fromthereand we're using the recognize method togo and convertthat speech to text so we're passingthrough a bunch of commands so in thiscase we're setting our audio to our filethat we just specified up herewe're also specifying the content typeso because our filehas a wav extension we're just sayingthat we're going to be sending a wavextension then we're also passingthrough the modelso this is the language model that wewant to use and in this case there's awhole bunchthat are available through the watsonspeech to techservice but again i'll include a link tothis in the description so you can grabthis and take a look at itthen last but not least we're using uhwe're passing through the continuousflag and we're getting our resultso ideally once we run this cell it'sgoing to go andprocess our audio and bring us back sometext solet's go on ahead and run that now itmight take a couple of minutes to runit'll vary depending on how long yourvideois five minutes later alrighty andthat's our conversion done now wehaven't actually output anything to thescreenbut it's all stored within our resvariable here so if we actually type inresand open that up you can see we've gotour convertedaudio that is brilliant now it did takea couple of minutes process but keep inmind that our video was around abouteight minutes long so it wasn't too badnow if we actually wanted to go andpre-process this and output it to a textfilewe can actually loop through each one ofthese transcriptionsand now output it so if we want we cancreate a couple of extra cells and thenif we actually take a look at our resultkeys we can take a look at thatyou can see that we've got two keys sowe've got result index and we've gotresults now if we actually open up ourresults sectionyou can see that all of our results areactually stored in there but there'sactually a couple of different resultsand that's becausewhat the speech attack service does isit breaks it out into paragraphsnow we can actually loop through eachone of these and extract them and thenpush them out to a text file so let's goahead and do thatso what we're basically going to bedoing is looping throughour res results array and we're going tobe pre-processing each one of thoseresults and then storing it inside ofanother array and then we'll do a littlebit of pre-processingpush it out to our text fileand there we go so what we've now got isall ofour transcriptions inside of a big textarray so if we take a look we shouldhaveeight paragraphs and you can see we'vegot eight paragraphsnow what we can do is do a little bit ofcleaning up so what we'll dois we'll strip out any white space andwe'll concatenate them all together andpush it out to a text fileand there you go so now if we take alook you can see that we've got ouroutput.txt file hereand all of our video has now beentranscodedso we started out with our youtube videothat we downloadedwe converted it to make v we thenextracted our audio and we've gone allthe wayand generated our transcription now interms of those last couple of lines ofcode that we wrotewhat i was basically doing is we takeour first letterwithin each sentence and i was basicallyadding a title case so that basicallymakes it a little bit cleaner and thenwhat we're doing is we're joiningeach one of those together to get onebig text block so if we take a look atour transcriptyou can see that it's everythingtogether rather than havingmultiple paragraphs and then last butnot least we're writing it outto a text file here and that about wrapsup this video so just to quickly recapwe went and downloaded a video fromyoutube using theyoutube dl library we then wentand imported all of our dependenciesextracted our audio usingffmpeg we set up a speech to textservice and convertedour video to speech and then we outputour speechto a text file so you've now effectivelygot afull-blown video transcript that you cantake away and usethanks so much for tuning in guyshopefully you found this video useful ifyou didbe sure to give it a thumbs up hitsubscribe and tick that bell so you getnotified of when i release future videosand all the assets included within thevideo are going to be linked in thedescription below as well as a githubrepositorywith all the code you need to getkickstarted on your way to performingvideo to textand let me know in the comments belowwhat you're using video to text forthanks again for tuning in peace